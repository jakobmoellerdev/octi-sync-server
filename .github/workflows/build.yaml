name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  packages: read
  issues: read
jobs:
  e2e:
    name: E2E
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Create k8s Kind Cluster
        uses: helm/kind-action@v1.10.0
        with:
          version: v0.20.0
          kubectl_version: v1.28.0
          node_image: kindest/node:v1.28.0@sha256:b7a4cad12c197af3ba43202d3efe03246b3f0793f162afb40a33c923952d5b31
          cluster_name: e2e-testing
      - name: skaffold setup
        run: |
          curl -Lo skaffold https://storage.googleapis.com/skaffold/releases/latest/skaffold-linux-amd64 && \
          sudo install skaffold /usr/local/bin/
      - run: skaffold run
      - run: skaffold delete

  build:
    name: Snapshot
    needs:
      - go-test
      - generated-files-check
      - lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - run: git fetch --force --tags
      - uses: actions/setup-go@v4
        with:
          go-version-file: go.mod
          cache: true
      - name: Set up Docker Context for Buildx
        id: buildx-context
        run: docker context create builders
      - name: Setup Docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          endpoint: builders
      - name: Setup Semantic Version Util
        run: |
          echo 'deb [trusted=yes] https://apt.fury.io/caarlos0/ /' | sudo tee /etc/apt/sources.list.d/caarlos0.list
          sudo apt-get update
          sudo apt-get install -y svu
      - name: Determine Next Release Version and Set Tag
        run: git tag "$(svu next)" --force
      - uses: goreleaser/goreleaser-action@v5
        name: goreleaser
        with:
          distribution: goreleaser
          version: latest
          args: release --snapshot --skip-sign
        env:
          BUILDER: ${{ steps.buildx.outputs.name }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Store Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: artifacts
          path: dist/*.json
  go-test:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version-file: go.mod
          cache: true
      - run: go test ./... -covermode=atomic -coverprofile=coverage.out --race
      - name: Convert coverage.out to coverage.lcov
        uses: jandelgado/gcov2lcov-action@v1
      - name: Coveralls
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.github_token }}
          path-to-lcov: coverage.lcov
          flag-name: Tests
          parallel: true
  collect-coverage:
    needs: go-test
    runs-on: ubuntu-latest
    steps:
      - name: Coveralls Finished
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.github_token }}
          parallel-finished: true
  generated-files-check:
    name: Verify Generated Files
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version-file: go.mod
          cache: true
      - run: go install github.com/deepmap/oapi-codegen/cmd/oapi-codegen@v1.15.0
      - run: go install go.uber.org/mock/mockgen@v0.3.0
      - run: go generate ./...
      - name: Check Generated files after rerunning go generate
        uses: tj-actions/verify-changed-files@v18
        id: verify-changed-files
        with:
          files: |
            **/*
      - name: Fail if Generated Files changed after running code-generation.
        if: steps.verify-changed-files.outputs.files_changed == 'true'
        run: |
          echo "Changed Generated Files: ${{ steps.verify-changed-files.outputs.changed_files }}"
          echo "Rerun go generate ./... to fix this issue"
          run: exit 1
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version-file: go.mod
      - uses: golangci/golangci-lint-action@v4
